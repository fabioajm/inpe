<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName">

	<!-- <context:property-placeholder location="/WEB-INF/jdbc.properties" /> -->

	<context:spring-configured />
	<context:annotation-config />
	<mvc:annotation-driven />
	
	<mvc:resources mapping="/**" location="/resources/" />
	
	<context:component-scan base-package="br.inpe" />

	<bean 
	    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix" value="/WEB-INF/views/"/>
	    <property name="suffix" value=".jsp"/>
	</bean>
	
	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		 <property name="persistenceUnitName" value="myPersistenceUnit"/>
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>br.inpe</value>
			</list>
		</property>
		<property name="jpaVendorAdapter">
	         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
	      </property>
	      <property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hbm2ddl.auto}</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop><!--configuração para trabalhar com binario no postgres -->
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="500000" />
	</bean>
	
		<beans profile="prod">
		<bean id="placeholderConfig"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:conf/jdbc_prod.properties</value>
				</list>
			</property>
		</bean>
	</beans>
	
	<beans profile="test,dev">
		<bean id="placeholderConfig"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:conf/jdbc_test.properties</value>
				</list>
			</property>
		</bean>
	</beans>
	
</beans>